#! /usr/bin/env ruby

require "clamp"
require "mqtt"

Clamp do

  option ["-h", "--host"], "HOST", "MQTT server",
         :default => "mqtt",
         :environment_variable => "MQTT_HOST"

  option ["-i", "--client-id"], "ID", "client ID"
  option ["-q", "--qos"], "QOS", "quality of service", type: Integer, default: 1
  option ["-p", "--persistent"], :flag, "persistent connection"

  subcommand "pub", "publish" do

    parameter "TOPIC", "topic to publish to"

    def execute
      with_mqtt do |c|
        $stdin.each_line do |line|
          c.publish(topic, line.strip, false, qos)
        end
      end
    end

  end

  subcommand "sub", "subscribe" do

    parameter "TOPIC", "topic to subscribe to"

    def execute
      with_mqtt do |c|
        c.subscribe(topic, qos)
        c.get do |topic, message|
          puts "#{topic}: #{message}"
        end
      end
    end

  end

  protected

  def with_mqtt(&block)
    connection = make_connection
    yield connection
  ensure
    connection.disconnect if connection
  end

  private

  def make_connection(retries = 10)
    config = {
      :host => host,
      :clean_session => !persistent?
    }
    config[:client_id] = client_id if client_id
    MQTT::Client.connect(config)
  rescue Errno::ECONNREFUSED => e
    if retries > 0
      $stderr.puts "retrying connection"
      retries -= 1
      sleep 1
      retry
    else
      raise e
    end
  end

end
